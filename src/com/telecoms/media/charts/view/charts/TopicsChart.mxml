<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	
	<fx:Script>
		<![CDATA[
			import com.telecoms.media.charts.model.ChartsModelLocator;
			
			import mx.charts.chartClasses.AxisBase;
			import mx.charts.chartClasses.Series;
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			
			[Bindable]
			public var model:ChartsModelLocator = ChartsModelLocator.getInstance();
			
			// Create ArrayCollection for Y Axis
			private function createVerticalAxisData(totalData:ArrayCollection):ArrayCollection {
				var tempArray:Array = new Array;
				for(var i:int=0;i<totalData.length;i++){
					if( tempArray.indexOf(totalData[i].format)==-1) {
						tempArray.push(totalData[i].format);
					}
				}
				var yAxisData:ArrayCollection = new ArrayCollection(tempArray);
				return yAxisData;
			}
			
			// Create ArrayCollection for Y Axis
			private function createHorizontalAxisData(totalData:ArrayCollection):ArrayCollection {
				var tempArray:Array = new Array;
				
				for(var i:int=0;i<totalData.length;i++){
					trace(totalData[i].format);
					/*if( tempArray.indexOf(totalData[i].format)==-1) {
						tempArray.push(totalData[i].format);
					}*/
				}
				var yAxisData:ArrayCollection = new ArrayCollection(tempArray);
				return yAxisData;
			}
			
			private function drillDown(e:ChartItemEvent):void{
				trace('Chart Item Clicked');
			}
			
			
			private function dataFunc(series:Series, item:Object, fieldName:String):Object {
				trace(item.format);
				if(fieldName == "yValue" && series.id=="news")
					return(item.format);
				else if(fieldName == "yValue" && series.id=="update")
					return(item.format);
				else if(fieldName == "yValue" && series.id=="analysis")
					return(item.format);
				else if(fieldName == "xValue")
					return(item.format);
				else
					return null;
			}
			
			private function reportsFormatChartData(xmlData:XML):ArrayCollection{
				var totalNodes:int = xmlData.content.length();
				var allFormatsArr:Array = new Array;
				var filteredFormatsArr:Array = new Array;
				var currentItem:String = "";
				
				//Place all Format types from XML service into an Array and sort
				for(var i:int=0; i<totalNodes; i++){
					allFormatsArr.push(xmlData.content[i].format);
				}
				allFormatsArr.sort();
				//Count amount of each Format and add to arrayCollection
				
				for each(var item:String in allFormatsArr){
					if(item!=currentItem){
						filteredFormatsArr.push({Format:item, TotalReports:1});
						currentItem = item;
					}
					else{						
						filteredFormatsArr[filteredFormatsArr.length -1].TotalReports++;
					}
				}
				
				var reportsFormatData:ArrayCollection = new ArrayCollection(filteredFormatsArr);
				
				//var obj:Object = {"Format":xmlData.content[i].format, "TotalReports":1};
				//reportsFormatData.addItem(obj);
				
				return reportsFormatData;
			}

		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout/>
		
	</s:layout>
	
	<fx:Declarations>
		<mx:Parallel id="showEffects">
			<mx:WipeRight duration="2000"/>
			<mx:Fade alphaFrom="0" alphaTo="1" duration="4000"/>
		</mx:Parallel>
	</fx:Declarations>
	
	
	<!--<mx:BarChart id="formatsChart" height="250" width="100%"
					paddingLeft="5" paddingRight="5"
					showDataTips="true" dataProvider="{model.formatNumbersCol}" itemClick="{drillDown(event)}" >
		
		<mx:series>
			<mx:ColumnSeries id="news" xField="News" displayName="News"/>
			<mx:ColumnSeries id="update" xField="Update" displayName="Update"/>
			<mx:ColumnSeries id="analysis" xField="Analysis" displayName="Analysis"/>
			<mx:ColumnSeries id="comment" xField="Comment" displayName="Comment"/>
		</mx:series>
	</mx:BarChart>-->
	
	<mx:BarChart id="myChart" dataProvider="{reportsFormatChartData(model.appYearData)}" showDataTips="true" showEffect="showEffects">
		<mx:verticalAxis>
			<mx:CategoryAxis 
				dataProvider="{reportsFormatChartData(model.appYearData)}" 
				categoryField="Format"
				/>
		</mx:verticalAxis>
		<mx:series>
			<mx:BarSeries 
				yField="Format" 
				xField="TotalReports" 
				displayName="Total Reports" 
				/>
		</mx:series>
	</mx:BarChart>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</s:Group>
